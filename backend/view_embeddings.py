#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sys
import os
import numpy as np

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é faceid
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from database import SessionLocal
from faceid.models import Person, FaceEmbedding
from faceid.utils import binary_to_embedding

def view_embeddings():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏"""
    
    print("=" * 80)
    print("üß† –ü–†–û–°–ú–û–¢–† –≠–ú–ë–ï–î–î–ò–ù–ì–û–í (–í–ï–ö–¢–û–†–û–í) –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 80)
    
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ª—é–¥–µ–π
        persons = db.query(Person).filter(Person.is_active == True).all()
        
        if not persons:
            print("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª—é–¥–µ–π!")
            print("   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: curl -X POST http://localhost:8000/api/faceid/enroll-all-from-images")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ª—é–¥–µ–π: {len(persons)}")
        print()
        
        for person in persons:
            print(f"üë§ {person.name} (ID: {person.id_person})")
            print(f"   üì∏ –§–æ—Ç–æ: {person.photo_count}")
            print(f"   üìÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {person.enrolled_at}")
            print()
            
            for i, embedding_record in enumerate(person.embeddings):
                print(f"   üì∑ –§–æ—Ç–æ {i+1} ({embedding_record.photo_id}):")
                
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ binary –≤ numpy array
                embedding_vector = binary_to_embedding(
                    embedding_record.embedding,
                    dtype=np.float32
                )
                
                print(f"      üî¢ –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å: {len(embedding_vector)} —á–∏—Å–µ–ª")
                print(f"      üìè –ù–æ—Ä–º–∞ –≤–µ–∫—Ç–æ—Ä–∞: {embedding_record.embedding_norm:.4f}")
                print(f"      üìä Min: {np.min(embedding_vector):.4f}, Max: {np.max(embedding_vector):.4f}")
                print(f"      üìà –°—Ä–µ–¥–Ω–µ–µ: {np.mean(embedding_vector):.4f}")
                print(f"      üî¢ –ü–µ—Ä–≤—ã–µ 10 —á–∏—Å–µ–ª: {embedding_vector[:10]}")
                print(f"      üî¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —á–∏—Å–µ–ª: {embedding_vector[-10:]}")
                print(f"      ‚öôÔ∏è  –ö–∞—á–µ—Å—Ç–≤–æ: {embedding_record.quality_metrics}")
                print()
        
        print("=" * 80)
        print("‚úÖ –≠–ú–ë–ï–î–î–ò–ù–ì–ò –ü–û–ö–ê–ó–ê–ù–´!")
        print("=" * 80)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ API
        print("\nüåê –ò–ª–∏ —á–µ—Ä–µ–∑ API:")
        print("   –í—Å–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏: http://localhost:8000/api/faceid/embeddings")
        print("   –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫: http://localhost:8000/api/faceid/embeddings/almas")
        
    finally:
        db.close()

if __name__ == "__main__":
    view_embeddings()
